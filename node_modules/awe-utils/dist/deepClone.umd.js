(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = global || self, factory(global.dharma = {}));
}(this, function (exports) { 'use strict';

  /**
   * 检查`value`是否为`array`。
   *
   * @since 0.0.6
   *
   * @param value
   * @returns {boolean}
   *
   * @example
   *
   * isArray([])
   * // => true
   *
   * isArray([1, 2, 3])
   * // => true
   */
  function isArray(value) {
    return Array.isArray(value) || value instanceof Array;
  }

  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function (obj) {
        return typeof obj;
      };
    } else {
      _typeof = function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  function isObject(value) {
    var type = _typeof(value);

    return value != null && (type === 'object' || type === 'function');
  }

  /**
   * 深拷贝
   * @param data
   */

  function deepClone(data) {
    if (isArray(data)) {
      return data.map(deepClone);
    } else if (isObject(data)) {
      return Object.keys(data).reduce(function (o, k) {
        o[k] = deepClone(data[k]);
        return o;
      }, {});
    } else {
      return data;
    }
  }

  exports.deepClone = deepClone;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
