"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _path = require("path");

var _sharedUtils = require("@walrus/shared-utils");

const pluginResolution = new _sharedUtils.PluginResolution('walrus');

class PluginAPI {
  constructor(id, service, pluginConfig) {
    this.id = id;
    this.service = service;
    this.pluginConfig = pluginConfig;
  }
  /**
   * 获取当前的工作目录
   */


  getCwd() {
    return this.service.context;
  }
  /**
   * 解决项目的路径
   *
   * @param {string} path 从项目根目录开始的相对路径
   * @return {string} 解析后的绝对路径
   */


  resolve(path) {
    return (0, _path.resolve)(this.service.context, path);
  }
  /**
   * 检查项目是否具有给定的插件
   * @param id
   */


  hasPlugin(id) {
    return this.service.plugins.some(p => pluginResolution.matchesPluginId(id, p.id));
  }
  /**
   * 注册一个作为 `walrus [name]` 的命令
   *
   * @param {string} name
   * @param {object} [opts]
   *   {
   *     description: string,
   *     usage: string,
   *     options: { [string]: string }
   *   }
   * @param {function} fn
   *   (args: { [string]: string }, rawArgs: string[]) => ?Promise
   */


  registerCommand(name, opts, fn) {
    if (_sharedUtils._.isFunction(opts)) {
      fn = opts;
      opts = null;
    }

    this.service.commands[name] = {
      fn,
      opts: opts || {},
      config: this.pluginConfig
    };
  }

}

var _default = PluginAPI;
exports.default = _default;