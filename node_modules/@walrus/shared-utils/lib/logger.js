"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.events = void 0;

var _chalk = _interopRequireDefault(require("chalk"));

var _events = require("events");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const events = new _events.EventEmitter();
exports.events = events;

class Logger {
  constructor() {
    this.format = (label, msg) => {
      return msg.split('\n').map((line, i) => {
        return i === 0 ? `${label} ${line}` : line.padStart(_chalk.default.reset(label).length);
      }).join('\n');
    };

    this.chalkTag = msg => {
      _chalk.default.bgBlackBright.white.dim(` ${msg} `);
    };

    this._log = (type, tag, message) => {
      if (message) {
        events.emit('log', {
          message,
          type,
          tag
        });
      }
    };

    this.log = (msg = '', tag = null) => {
      tag ? console.log(this.format(this.chalkTag(tag), msg)) : console.log(msg);

      this._log('log', tag, msg);
    };

    this.info = (msg = '', tag = null) => {
      console.log(this.format(_chalk.default.bgBlue.black(' INFO ') + (tag ? this.chalkTag(tag) : ''), msg));

      this._log('info', tag, msg);
    };

    this.done = (msg = '', tag = null) => {
      console.log(this.format(_chalk.default.bgGreen.black(' DONE ') + (tag ? this.chalkTag(tag) : ''), msg));

      this._log('done', tag, msg);
    };

    this.warn = (msg = '', tag = null) => {
      console.warn(this.format(_chalk.default.bgYellow.black(' WARN ') + (tag ? this.chalkTag(tag) : ''), _chalk.default.yellow(msg)));

      this._log('warn', tag, msg);
    };

    this.error = (msg, tag = null) => {
      console.error(this.format(_chalk.default.bgRed(' ERROR ') + (tag ? this.chalkTag(tag) : ''), _chalk.default.red(msg)));

      this._log('error', tag, msg);

      if (msg instanceof Error) {
        console.error(msg.stack);

        this._log('error', tag, msg.stack);
      }
    };
  }

}

var _default = Logger;
exports.default = _default;