"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  debug: true,
  minimist: true,
  compatDirname: true,
  Logger: true,
  signale: true,
  _: true,
  semver: true,
  isUrl: true,
  chalk: true,
  readPkg: true,
  clearConsole: true,
  getSystemPath: true,
  isLinux: true,
  isMacintosh: true,
  isWindows: true,
  configLoader: true,
  winPath: true,
  PluginResolution: true,
  checkNodeVersion: true
};
Object.defineProperty(exports, "compatDirname", {
  enumerable: true,
  get: function get() {
    return _compatDirname.default;
  }
});
Object.defineProperty(exports, "Logger", {
  enumerable: true,
  get: function get() {
    return _logger.default;
  }
});
Object.defineProperty(exports, "signale", {
  enumerable: true,
  get: function get() {
    return _signale.default;
  }
});
Object.defineProperty(exports, "_", {
  enumerable: true,
  get: function get() {
    return _lodash.default;
  }
});
Object.defineProperty(exports, "semver", {
  enumerable: true,
  get: function get() {
    return _semver.default;
  }
});
Object.defineProperty(exports, "isUrl", {
  enumerable: true,
  get: function get() {
    return _isUrl.default;
  }
});
Object.defineProperty(exports, "chalk", {
  enumerable: true,
  get: function get() {
    return _chalk.default;
  }
});
Object.defineProperty(exports, "readPkg", {
  enumerable: true,
  get: function get() {
    return _readPkg.default;
  }
});
Object.defineProperty(exports, "clearConsole", {
  enumerable: true,
  get: function get() {
    return _clearConsole.default;
  }
});
Object.defineProperty(exports, "getSystemPath", {
  enumerable: true,
  get: function get() {
    return _getSystemPath.default;
  }
});
Object.defineProperty(exports, "isLinux", {
  enumerable: true,
  get: function get() {
    return _osUtils.isLinux;
  }
});
Object.defineProperty(exports, "isMacintosh", {
  enumerable: true,
  get: function get() {
    return _osUtils.isMacintosh;
  }
});
Object.defineProperty(exports, "isWindows", {
  enumerable: true,
  get: function get() {
    return _osUtils.isWindows;
  }
});
Object.defineProperty(exports, "configLoader", {
  enumerable: true,
  get: function get() {
    return _configLoader.default;
  }
});
Object.defineProperty(exports, "winPath", {
  enumerable: true,
  get: function get() {
    return _winPath.default;
  }
});
Object.defineProperty(exports, "PluginResolution", {
  enumerable: true,
  get: function get() {
    return _pluginResolution.default;
  }
});
Object.defineProperty(exports, "checkNodeVersion", {
  enumerable: true,
  get: function get() {
    return _checkNodeVersion.default;
  }
});
exports.minimist = exports.debug = void 0;

var _compatDirname = _interopRequireDefault(require("./compat-dirname"));

var _logger = _interopRequireDefault(require("./logger"));

var _signale = _interopRequireWildcard(require("./signale"));

Object.keys(_signale).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _signale[key];
    }
  });
});

var _lodash = _interopRequireDefault(require("./lodash"));

var _semver = _interopRequireDefault(require("./semver"));

var _isUrl = _interopRequireDefault(require("./is-url"));

var _chalk = _interopRequireDefault(require("chalk"));

var _readPkg = _interopRequireDefault(require("./read-pkg"));

var _clearConsole = _interopRequireDefault(require("./utils/clear-console"));

var _getSystemPath = _interopRequireDefault(require("./utils/get-system-path"));

var _osUtils = require("./os-utils");

var _configLoader = _interopRequireDefault(require("./config-loader"));

var _winPath = _interopRequireDefault(require("./win-path"));

var _pluginResolution = _interopRequireDefault(require("./plugin-resolution"));

var _checkNodeVersion = _interopRequireDefault(require("./check-node-version"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const debug = require('debug');

exports.debug = debug;

const minimist = require('minimist');

exports.minimist = minimist;