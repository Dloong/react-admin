{"version":3,"file":"index.umd.min.js","sources":["../src/index.ts"],"sourcesContent":["export interface ClassArray extends Array<ClassValue> {};\n\nexport interface ClassDictionary {\n  [id: string]: any;\n}\n\nexport type ClassValue = string | number | ClassDictionary | ClassArray | undefined | null | boolean;\n\nlet hasOwn = {}.hasOwnProperty;\n\nfunction classNames(...classValues: ClassValue[]): string {\n  let classes = [];\n  for (let i = 0; i < classValues.length; i++) {\n    let arg = classValues[i];\n    if (!arg) continue;\n\n    let argType = typeof arg;\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg);\n    } else if (Array.isArray(arg) && arg.length) {\n      let inner = classNames.apply(null, arg);\n      if (inner) {\n        classes.push(inner);\n      }\n    } else if (argType === 'object') {\n      for (let key in arg as object) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key);\n        }\n      }\n    }\n  }\n\n  return classes.join(' ');\n}\n\nexport default classNames;\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join"],"mappings":";;;;;;;;;;saAQA,IAAIA,EAAS,GAAGC,sBAEhB,SAASC,YACHC,EAAU,GACLC,EAAI,EAAGA,EAAIC,UAAYC,OAAQF,IAAK,KACvCG,EAAkBH,uBAAAA,mBAAAA,MACjBG,OAEDC,IAAiBD,MAEL,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,KACvCM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACFT,EAAQM,KAAKG,QAEV,GAAgB,WAAZJ,MACJ,IAAIM,KAAOP,EACVP,EAAOe,KAAKR,EAAKO,IAAQP,EAAIO,IAC/BX,EAAQM,KAAKK,WAMdX,EAAQa,KAAK"}