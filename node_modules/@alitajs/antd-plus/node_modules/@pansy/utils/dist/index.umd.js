(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@pansy/is-array'), require('@pansy/is-boolean'), require('@pansy/is-function'), require('@pansy/is-integer'), require('@pansy/is-nan'), require('@pansy/is-nil'), require('@pansy/is-null'), require('@pansy/is-number'), require('@pansy/is-object'), require('@pansy/is-plain-object'), require('@pansy/is-string'), require('@pansy/is-promise'), require('@pansy/is-regexp'), require('@pansy/is-date'), require('@pansy/is-undefined'), require('@pansy/indent'), require('@pansy/dent'), require('@pansy/get-type'), require('@pansy/policy')) :
	typeof define === 'function' && define.amd ? define(['exports', '@pansy/is-array', '@pansy/is-boolean', '@pansy/is-function', '@pansy/is-integer', '@pansy/is-nan', '@pansy/is-nil', '@pansy/is-null', '@pansy/is-number', '@pansy/is-object', '@pansy/is-plain-object', '@pansy/is-string', '@pansy/is-promise', '@pansy/is-regexp', '@pansy/is-date', '@pansy/is-undefined', '@pansy/indent', '@pansy/dent', '@pansy/get-type', '@pansy/policy'], factory) :
	(global = global || self, factory(global.pansy = {}, global.isArray, global.isBoolean, global.isFunction, global.isInteger, global.isNan, global.isNil, global.isNull, global.isNumber, global.isObject, global.isPlainObject, global.isString, global.isPromise, global.isRegexp, global.isDate, global.isUndefined, global.indent, global.dent, global.getType, global.policy));
}(this, (function (exports, isArray, isBoolean, isFunction, isInteger, isNan, isNil, isNull, isNumber, isObject, isPlainObject, isString, isPromise, isRegexp, isDate, isUndefined, indent, dent, getType, policy) { 'use strict';

	isArray = isArray && isArray.hasOwnProperty('default') ? isArray['default'] : isArray;
	isBoolean = isBoolean && isBoolean.hasOwnProperty('default') ? isBoolean['default'] : isBoolean;
	isFunction = isFunction && isFunction.hasOwnProperty('default') ? isFunction['default'] : isFunction;
	isInteger = isInteger && isInteger.hasOwnProperty('default') ? isInteger['default'] : isInteger;
	isNan = isNan && isNan.hasOwnProperty('default') ? isNan['default'] : isNan;
	isNil = isNil && isNil.hasOwnProperty('default') ? isNil['default'] : isNil;
	isNull = isNull && isNull.hasOwnProperty('default') ? isNull['default'] : isNull;
	isNumber = isNumber && isNumber.hasOwnProperty('default') ? isNumber['default'] : isNumber;
	isObject = isObject && isObject.hasOwnProperty('default') ? isObject['default'] : isObject;
	isPlainObject = isPlainObject && isPlainObject.hasOwnProperty('default') ? isPlainObject['default'] : isPlainObject;
	isString = isString && isString.hasOwnProperty('default') ? isString['default'] : isString;
	isPromise = isPromise && isPromise.hasOwnProperty('default') ? isPromise['default'] : isPromise;
	isRegexp = isRegexp && isRegexp.hasOwnProperty('default') ? isRegexp['default'] : isRegexp;
	isDate = isDate && isDate.hasOwnProperty('default') ? isDate['default'] : isDate;
	isUndefined = isUndefined && isUndefined.hasOwnProperty('default') ? isUndefined['default'] : isUndefined;
	indent = indent && indent.hasOwnProperty('default') ? indent['default'] : indent;
	dent = dent && dent.hasOwnProperty('default') ? dent['default'] : dent;
	getType = getType && getType.hasOwnProperty('default') ? getType['default'] : getType;
	policy = policy && policy.hasOwnProperty('default') ? policy['default'] : policy;



	exports.isArray = isArray;
	exports.isBoolean = isBoolean;
	exports.isFunction = isFunction;
	exports.isInteger = isInteger;
	exports.isNaN = isNan;
	exports.isNil = isNil;
	exports.isNull = isNull;
	exports.isNumber = isNumber;
	exports.isObject = isObject;
	exports.isPlainObject = isPlainObject;
	exports.isString = isString;
	exports.isPromise = isPromise;
	exports.isRegExp = isRegexp;
	exports.isDate = isDate;
	exports.isUndefined = isUndefined;
	exports.indent = indent;
	exports.dent = dent;
	exports.getType = getType;
	exports.Policy = policy;

	Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=index.umd.js.map
