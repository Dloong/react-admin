(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = global || self, global.isObject = factory());
}(this, (function () { 'use strict';

  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function (obj) {
        return typeof obj;
      };
    } else {
      _typeof = function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  /**
   * 检查 `value` 是否是一个对象。
   *
   * @param value 要检查的值
   * @returns `value` 是对象返回 `true`，否则返回 `false`
   * @example
   * ```ts
   * isObject({}) // => true
   * isObject(() => {}) // => true
   * isObject(null) // => false
   * ```
   */
  function isObject(value) {
    var type = _typeof(value);

    return value != null && (type === 'object' || type === 'function');
  }

  return isObject;

})));
//# sourceMappingURL=index.umd.js.map
