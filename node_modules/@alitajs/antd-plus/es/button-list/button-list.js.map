{"version":3,"sources":["button-list/button-list.js"],"names":["React","useState","classNames","ButtonList","props","prefixCls","className","style","list","size","isLink","more","moreType","maxCount","buttons","setButtons","menus","setMenus","useEffect","length","slice","map","item","moreRender","createElement","type","index","text","buttonProps","key","overlay","Item","onClick","disabled","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Button, Dropdown, Menu, Icon } from 'antd';\nconst ButtonList = (props) => {\n    const { prefixCls, className, style, list = [], size, isLink, more, moreType, maxCount } = props;\n    const [buttons, setButtons] = useState([]);\n    const [menus, setMenus] = useState([]);\n    React.useEffect(() => {\n        if (list.length > maxCount) {\n            let buttons = list.slice(0, maxCount);\n            buttons = buttons.map(item => Object.assign(item, { size }));\n            setButtons(buttons);\n            setMenus(list.slice(maxCount));\n        }\n        else {\n            setButtons(list);\n        }\n    }, [props.list]);\n    const moreRender = () => {\n        if (more) {\n            return more;\n        }\n        if (moreType === 'text') {\n            return (React.createElement(\"span\", null,\n                \"\\u66F4\\u591A\\u64CD\\u4F5C\",\n                React.createElement(Icon, { type: \"down\" })));\n        }\n        return (React.createElement(\"span\", null,\n            React.createElement(Icon, { type: \"more\" })));\n    };\n    return (React.createElement(\"div\", { className: classNames(className, {\n            [`${prefixCls}`]: true,\n            [`is-link`]: isLink\n        }), style: style },\n        (buttons.length > 0) && (buttons.map((item, index) => {\n            const { text, type, className, ...buttonProps } = item;\n            return (React.createElement(Button, Object.assign({ key: index }, buttonProps, { type: isLink ? 'link' : type, className: classNames(className, {\n                    [`${prefixCls}__button-${type}`]: isLink\n                }) }), text));\n        })),\n        (menus.length > 0) && (React.createElement(Dropdown, { overlay: React.createElement(Menu, null, menus.map((item, index) => (React.createElement(Menu.Item, { key: index, onClick: item.onClick, disabled: item.disabled }, item.text)))) },\n            React.createElement(Button, { size: size, type: isLink ? 'link' : 'default' }, moreRender())))));\n};\nButtonList.defaultProps = {\n    prefixCls: 'ant-plus-button-list',\n    maxCount: 3,\n    size: 'default',\n    isLink: false,\n    moreType: 'text'\n};\nexport default ButtonList;\n"],"file":"button-list.js"}