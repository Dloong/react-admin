{"version":3,"sources":["button-list/button-list.js"],"names":["ButtonList","props","prefixCls","className","style","list","size","isLink","more","moreType","maxCount","buttons","setButtons","menus","setMenus","React","useEffect","length","slice","map","item","moreRender","createElement","type","index","text","buttonProps","key","overlay","Item","onClick","disabled","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Button, Dropdown, Menu, Icon } from 'antd';\nconst ButtonList = (props) => {\n    const { prefixCls, className, style, list = [], size, isLink, more, moreType, maxCount } = props;\n    const [buttons, setButtons] = useState([]);\n    const [menus, setMenus] = useState([]);\n    React.useEffect(() => {\n        if (list.length > maxCount) {\n            let buttons = list.slice(0, maxCount);\n            buttons = buttons.map(item => Object.assign(item, { size }));\n            setButtons(buttons);\n            setMenus(list.slice(maxCount));\n        }\n        else {\n            setButtons(list);\n        }\n    }, [props.list]);\n    const moreRender = () => {\n        if (more) {\n            return more;\n        }\n        if (moreType === 'text') {\n            return (React.createElement(\"span\", null,\n                \"\\u66F4\\u591A\\u64CD\\u4F5C\",\n                React.createElement(Icon, { type: \"down\" })));\n        }\n        return (React.createElement(\"span\", null,\n            React.createElement(Icon, { type: \"more\" })));\n    };\n    return (React.createElement(\"div\", { className: classNames(className, {\n            [`${prefixCls}`]: true,\n            [`is-link`]: isLink\n        }), style: style },\n        (buttons.length > 0) && (buttons.map((item, index) => {\n            const { text, type, className, ...buttonProps } = item;\n            return (React.createElement(Button, Object.assign({ key: index }, buttonProps, { type: isLink ? 'link' : type, className: classNames(className, {\n                    [`${prefixCls}__button-${type}`]: isLink\n                }) }), text));\n        })),\n        (menus.length > 0) && (React.createElement(Dropdown, { overlay: React.createElement(Menu, null, menus.map((item, index) => (React.createElement(Menu.Item, { key: index, onClick: item.onClick, disabled: item.disabled }, item.text)))) },\n            React.createElement(Button, { size: size, type: isLink ? 'link' : 'default' }, moreRender())))));\n};\nButtonList.defaultProps = {\n    prefixCls: 'ant-plus-button-list',\n    maxCount: 3,\n    size: 'default',\n    isLink: false,\n    moreType: 'text'\n};\nexport default ButtonList;\n"],"file":"button-list.js"}