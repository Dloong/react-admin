"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

require("antd/lib/button/style");

var _button = _interopRequireDefault(require("antd/lib/button"));

var _react = _interopRequireDefault(require("react"));

var _utils = require("./utils");

var _en_US = _interopRequireDefault(require("./locale/en_US"));

var _LocaleReceiver = _interopRequireDefault(require("antd/lib/locale-provider/LocaleReceiver"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var SendCode =
/*#__PURE__*/
function (_React$Component) {
  _inherits(SendCode, _React$Component);

  function SendCode(props) {
    var _this;

    _classCallCheck(this, SendCode);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SendCode).call(this, props));
    _this.timer = null;
    _this.state = {
      loading: false,
      status: _this.props.start ? 1 : 0,
      second: undefined
    };

    _this.startCountdown = function () {
      var second = _this.state.second || _this.props.second;

      _this.setState({
        second: second,
        status: 1
      });

      _this.timer = setInterval(function () {
        second -= 1;

        _this.setState({
          second: second
        });

        if (second <= 0) {
          _this.timeout();
        }
      }, 1000);
    };

    _this.timeout = function () {
      var onEnd = _this.props.onEnd; // 设置为运行结束后状态

      _this.setState({
        second: undefined,
        status: 2
      });

      if (_this.timer) {
        clearInterval(_this.timer);
      } // 发出倒计时结束事件


      onEnd && onEnd();
    };

    _this.buttonText = function (sendCodeLocale) {
      var _this$props = _this.props,
          initText = _this$props.initText,
          resetText = _this$props.resetText,
          runText = _this$props.runText;
      var _this$state = _this.state,
          status = _this$state.status,
          second = _this$state.second;

      switch (status) {
        case 1:
          return (0, _utils.getTemplateText)(runText || sendCodeLocale.runText, second);

        case 2:
          return resetText || sendCodeLocale.resetText;

        default:
          return initText || sendCodeLocale.initText;
      }
    };

    _this.renderSendCode = function (sendCodeLocale) {
      var _this$props2 = _this.props,
          start = _this$props2.start,
          initText = _this$props2.initText,
          resetText = _this$props2.resetText,
          runText = _this$props2.runText,
          onEnd = _this$props2.onEnd,
          rest = _objectWithoutProperties(_this$props2, ["start", "initText", "resetText", "runText", "onEnd"]);

      var _this$state2 = _this.state,
          loading = _this$state2.loading,
          status = _this$state2.status;
      return _react["default"].createElement(_button["default"], _extends({
        loading: loading,
        disabled: status === 1
      }, rest), _this.buttonText(sendCodeLocale));
    };

    return _this;
  }

  _createClass(SendCode, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.timer) {
        clearInterval(this.timer);
      }
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.start) {
        this.startCountdown();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react["default"].createElement(_LocaleReceiver["default"], {
        componentName: "SendCode",
        defaultLocale: _en_US["default"]
      }, function (sendCodeLocale) {
        return _this2.renderSendCode(sendCodeLocale);
      });
    }
  }]);

  return SendCode;
}(_react["default"].Component);

SendCode.defaultProps = {
  start: false,
  second: 60
};
var _default = SendCode;
exports["default"] = _default;
//# sourceMappingURL=send-code.js.map
